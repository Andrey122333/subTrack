name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - newLaba3
  pull_request:
    branches:
      - newLaba3

env:
  DOCKER_HUB_REPO: andrey122333
  IMAGE_NAME_BACKEND: sub-server:dev
  IMAGE_NAME_FRONTEND: sub-nginx:latest
  IMAGE_NAME_FRONTEND_TEST: sub-client:test

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Сборка бэкенд образа
      - name: Build backend image
        run: |
          cd server
          docker build \
            --target dev \
            -t $DOCKER_HUB_REPO/$IMAGE_NAME_BACKEND \
            .

      # Сборка фронтенд образа
      - name: Build frontend image
        run: |
          cd client
          docker build \
            -t $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND \
            -f Dockerfile.nginx \
            .

      # Запуск тестовой MongoDB
      - name: Start MongoDB for backend tests
        run: |
          docker run -d --name mongo-test \
            -p 27038:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=password \
            mongo:6.0
          
          # Ожидание готовности MongoDB
          for i in {1..30}; do
            if docker run --rm --network container:mongo-test mongo:6.0 \
              mongo --eval 'db.runCommand("ping").ok' --quiet; then
              break
            fi
            sleep 1
          done

      # Тесты бэкенда
      - name: Run backend tests
        run: |
          cd server
          docker build --target test -t backend-test .
          docker run --rm \
            --name backend-test-container \
            --link mongo-test:mongo-test \
            -e MONGO_URI="mongodb://admin:password@mongo-test:27017/subscriptions_test?authSource=admin" \
            backend-test

      # Тесты фронтенда
      - name: Run frontend tests
        run: |
          cd client
          docker build -t $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND_TEST -f Dockerfile.test .
          docker run --rm $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND_TEST

      # Push только при пуше в ветку
      - name: Push images to Docker Hub
        if: github.event_name == 'push'
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push $DOCKER_HUB_REPO/$IMAGE_NAME_BACKEND
          docker push $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND