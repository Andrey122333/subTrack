name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - newLaba3
  pull_request:
    branches:
      - newLaba3

env:
  DOCKER_HUB_REPO: andrey122333
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
  IMAGE_NAME_BACKEND: sub-server:dev
  IMAGE_NAME_FRONTEND: sub-nginx:latest
  IMAGE_NAME_FRONTEND_TEST: sub-client:test

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      backend-digest: ${{ steps.push-backend.outputs.digest }}
      frontend-digest: ${{ steps.push-frontend.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Сборка бэкенд образа
      - name: Build backend image
        run: |
          cd server
          docker build \
            --target dev \
            -t $GHCR_REPO/$IMAGE_NAME_BACKEND \
            .

      # Сборка фронтенд образа
      - name: Build frontend image
        run: |
          cd client
          docker build \
            -t $GHCR_REPO/$IMAGE_NAME_FRONTEND \
            -f Dockerfile.nginx \
            .

      # Авторизация в GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push бэкенд образа в GHCR
      - name: Push backend to GHCR
        id: push-backend
        run: |
          docker push $GHCR_REPO/$IMAGE_NAME_BACKEND
          echo "digest=$(docker inspect --format='{{.Id}}' $GHCR_REPO/$IMAGE_NAME_BACKEND)" >> $GITHUB_OUTPUT

      # Push фронтенд образа в GHCR
      - name: Push frontend to GHCR
        id: push-frontend
        run: |
          docker push $GHCR_REPO/$IMAGE_NAME_FRONTEND
          echo "digest=$(docker inspect --format='{{.Id}}' $GHCR_REPO/$IMAGE_NAME_FRONTEND)" >> $GITHUB_OUTPUT

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Авторизация в GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pull бэкенд образа из GHCR
      - name: Pull backend image
        run: docker pull $GHCR_REPO/$IMAGE_NAME_BACKEND

      # Pull фронтенд образа из GHCR
      - name: Pull frontend image
        run: docker pull $GHCR_REPO/$IMAGE_NAME_FRONTEND

      # Запуск тестовой MongoDB
      - name: Start MongoDB for backend tests
        run: |
          docker run -d --name mongo-test \
            -p 27038:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=password \
            mongo:6.0
          
          # Ожидание готовности MongoDB
          for i in {1..30}; do
            if docker run --rm --network container:mongo-test mongo:6.0 \
              mongo --eval 'db.runCommand("ping").ok' --quiet; then
              break
            fi
            sleep 1
          done

      # Тесты бэкенда
      - name: Run backend tests
        run: |
          cd server
          docker build --target test -t backend-test .
          docker run --rm \
            --name backend-test-container \
            --link mongo-test:mongo-test \
            -e MONGO_URI="mongodb://admin:password@mongo-test:27017/subscriptions_test?authSource=admin" \
            backend-test

      # Тесты фронтенда
      - name: Run frontend tests
        run: |
          cd client
          docker build -t $GHCR_REPO/$IMAGE_NAME_FRONTEND_TEST -f Dockerfile.test .
          docker run --rm $GHCR_REPO/$IMAGE_NAME_FRONTEND_TEST

      - name: Cleanup after tests
        if: always()
        run: |
          docker stop mongo-test || true
          docker rm mongo-test || true

  push:
    needs: [build, test]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      # Авторизация в GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pull образов из GHCR
      - name: Pull backend image
        run: docker pull $GHCR_REPO/$IMAGE_NAME_BACKEND

      - name: Pull frontend image
        run: docker pull $GHCR_REPO/$IMAGE_NAME_FRONTEND

      # Перетегирование для Docker Hub
      - name: Retag images for Docker Hub
        run: |
          docker tag $GHCR_REPO/$IMAGE_NAME_BACKEND $DOCKER_HUB_REPO/$IMAGE_NAME_BACKEND
          docker tag $GHCR_REPO/$IMAGE_NAME_FRONTEND $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND

      # Авторизация в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Push в Docker Hub
      - name: Push backend to Docker Hub
        run: docker push $DOCKER_HUB_REPO/$IMAGE_NAME_BACKEND

      - name: Push frontend to Docker Hub
        run: docker push $DOCKER_HUB_REPO/$IMAGE_NAME_FRONTEND